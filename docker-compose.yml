version: '3.7'
services:
  ##############
  ## POSTGRES ##
  postgres-db:
    image: postgres
    restart: always
    networks:
      - database
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - 5432:5432
    container_name: postgres_db
    volumes:
      - ./pgdata:/var/lib/postgresql/data

    ##############
    ## PG_ADMIN ##
  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    logging:
      driver: none
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_LISTEN_PORT=${PGADMIN_LISTEN_PORT}
    ports:
      - '8080:80'
    depends_on:
      - postgres-db
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    #############
    ##   API   ##
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
    networks:
      - app
      - database
    ports:
      - 5500:5500
    environment:
      - DB_TYPE=${DB_TYPE}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_NAME=${DB_NAME}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - PORT=5500
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - postgres-db
    restart: always
    command: npm run start:dev
    container_name: api
networks:
  database:
    driver: bridge
  app:
volumes:
  pgdata:
  pgadmin-data:
